{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","type","id","onClick","Section","title","children","defaultProps","Notification","message","App","state","addReview","e","target","setState","prevState","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","arrFeedback","persentage","i","length","this","Component","ReactDOM","render","document","getElementById"],"mappings":"oNAEe,SAASA,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,6BACE,oCAAUJ,EAAV,KACA,uCAAaC,GACb,mCAASC,GAERC,EACAC,GCdQ,SAASC,EAAT,GAAuD,EAA5BC,QAA6B,IAApBC,EAAmB,EAAnBA,gBACjD,OACE,6BACE,4BAAQC,KAAK,SAASC,GAAG,OAAOC,QAASH,GAAzC,QAGA,4BAAQC,KAAK,SAASC,GAAG,UAAUC,QAASH,GAA5C,WAGA,4BAAQC,KAAK,SAASC,GAAG,MAAMC,QAASH,GAAxC,QCRN,SAASI,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,iCACGD,GAAS,4BAAKA,GACdC,GAKPF,EAAQG,aAAe,CACrBF,MAAO,IAQMD,QCnBA,SAASI,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,6BAAMA,G,ICGMC,E,4MAKnBC,MAAQ,CACNlB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPiB,UAAY,SAACC,GACS,SAAhBA,EAAEC,OAAOZ,GACX,EAAKa,UAAS,SAACC,GACb,MAAO,CAAEvB,KAAMuB,EAAUvB,KAAO,MAET,YAAhBoB,EAAEC,OAAOZ,GAClB,EAAKa,UAAS,SAACC,GACb,MAAO,CAAEtB,QAASsB,EAAUtB,QAAU,MAEf,QAAhBmB,EAAEC,OAAOZ,IAClB,EAAKa,UAAS,SAACC,GACb,MAAO,CAAErB,IAAKqB,EAAUrB,IAAM,O,EAKpCsB,mBAAqB,WACnB,IAAMrB,EAAQsB,OAAOC,OAAO,EAAKR,OAAOS,QACtC,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IACtB,GAEF,OAAO,qCAAW1B,I,EAGpB2B,gCAAkC,WAIhC,IAHA,IAAMC,EAAcN,OAAOC,OAAO,EAAKR,OACnCf,EAAQ,EACR6B,EAAa,EACRC,EAAI,EAAGA,EAAIF,EAAYG,OAAQD,IAAK,CAE3C9B,GADgB4B,EAAYE,GAE5BD,EAAc,EAAKd,MAAMlB,MAAQG,EAAQ,EAAKe,MAAMjB,SAAY,IAOlE,OAAO,iDAAuB+B,EAAvB,M,uDAIP,IAAM7B,EAAQsB,OAAOC,OAAOS,KAAKjB,OAAOS,QACtC,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IACtB,GAGF,OACE,6BACE,kBAAC,EAAD,CAASjB,MAAM,yBACb,kBAACP,EAAD,CAAiBE,gBAAiB4B,KAAKhB,aAGzC,kBAAC,EAAD,CAASP,MAAM,cACF,IAAVT,GAAe,kBAACY,EAAD,CAAcC,QAAQ,sBACrCb,EAAQ,GACP,kBAACJ,EAAD,CACEC,KAAMmC,KAAKjB,MAAMlB,KACjBC,QAASkC,KAAKjB,MAAMjB,QACpBC,IAAKiC,KAAKjB,MAAMhB,IAChBC,MAAO,uBAAMqB,mBAAN,MACPpB,mBAAoB,uBAAM0B,gCAAN,c,GAxEDM,aAAZnB,EACZH,aAAe,CAAEd,KAAM,EAAGC,QAAS,EAAGC,IAAK,GCFpDmC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.4960f0a3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <div>\r\n      <p>Good: {good} </p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n\r\n      {total}\r\n      {positivePercentage}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      <button type=\"button\" id=\"good\" onClick={onLeaveFeedback}>\r\n        Good\r\n      </button>\r\n      <button type=\"button\" id=\"neutral\" onClick={onLeaveFeedback}>\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" id=\"bad\" onClick={onLeaveFeedback}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.defaultProps = {\r\n  title: \"\",\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nexport default function Notification({ message }) {\r\n  return <div>{message}</div>;\r\n}\r\n","import React, { Component } from \"react\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\n\nexport default class App extends Component {\n  static defaultProps = { good: 0, neutral: 0, bad: 0 };\n\n  static propTypes = {};\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addReview = (e) => {\n    if (e.target.id === \"good\") {\n      this.setState((prevState) => {\n        return { good: prevState.good + 1 };\n      });\n    } else if (e.target.id === \"neutral\") {\n      this.setState((prevState) => {\n        return { neutral: prevState.neutral + 1 };\n      });\n    } else if (e.target.id === \"bad\") {\n      this.setState((prevState) => {\n        return { bad: prevState.bad + 1 };\n      });\n    }\n  };\n\n  countTotalFeedback = () => {\n    const total = Object.values(this.state).reduce(\n      (acc, value) => acc + value,\n      0\n    );\n    return <p>Total: {total}</p>;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const arrFeedback = Object.values(this.state);\n    let total = 0;\n    let persentage = 0;\n    for (let i = 0; i < arrFeedback.length; i++) {\n      const element = arrFeedback[i];\n      total += element;\n      persentage = (this.state.good / (total - this.state.neutral)) * 100;\n    }\n    // const persentage = Object.values(this.state).reduce(\n    //   (acc, value) => this.state.good / (acc + value - this.state.neutral)*100,\n    //   0\n    // );\n\n    return <p>Positive feedback: {persentage}%</p>;\n  };\n\n  render() {\n    const total = Object.values(this.state).reduce(\n      (acc, value) => acc + value,\n      0\n    );\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.addReview} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total === 0 && <Notification message=\"No feedback given\" />}\n          {total > 0 && (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={<this.countTotalFeedback />}\n              positivePercentage={<this.countPositiveFeedbackPercentage />}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}