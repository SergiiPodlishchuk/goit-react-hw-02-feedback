{"version":3,"sources":["components/Section/Section.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","App.js","index.js"],"names":["Section","title","children","defaultProps","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","isShowNotification","isShowStatistics","FeedbackOptions","onLeaveFeedback","type","id","onClick","INITIAL_FEEDBACK","App","state","addReview","target","setState","prevState","countPositiveFeedbackPercentage","arrFeedback","Object","values","persentage","i","length","this","reduce","acc","value","Component","ReactDOM","render","document","getElementById"],"mappings":"oNAGA,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,iCACGD,GAAS,4BAAKA,GACdC,GAKPF,EAAQG,aAAe,CACrBF,MAAO,IAQMD,QCnBA,SAASI,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,6BAAMA,GCEf,IAqBeC,EArBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACzCC,EAA+B,IAAVF,EACrBG,EAAmBH,EAAQ,EAEjC,OACE,kBAAC,EAAD,CAAST,MAAM,cACZW,GAAsB,kBAACR,EAAD,CAAcC,QAAQ,sBAC5CQ,GACC,6BACE,oCAAUN,EAAV,KACA,uCAAaC,GACb,mCAASC,GAET,qCAAWC,GACX,iDAAuBC,EAAvB,QCfK,SAASG,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACxC,OACE,kBAAC,EAAD,CAASd,MAAM,yBACb,6BACE,4BAAQe,KAAK,SAASC,GAAG,OAAOC,QAASH,GAAzC,QAGA,4BAAQC,KAAK,SAASC,GAAG,UAAUC,QAASH,GAA5C,WAGA,4BAAQC,KAAK,SAASC,GAAG,MAAMC,QAASH,GAAxC,SCTR,IAAMI,EAAmB,CAAEZ,KAAM,EAAGC,QAAS,EAAGC,IAAK,GAEhCW,E,4MACnBC,MAAQF,E,EAERG,UAAY,YAAiB,IACnBL,EADkB,EAAbM,OACLN,GACG,SAAPA,EAMO,YAAPA,EAMO,QAAPA,GACF,EAAKO,UAAS,SAACC,GACb,MAAO,CAAEhB,IAAKgB,EAAUhB,IAAM,MAPhC,EAAKe,UAAS,SAACC,GACb,MAAO,CAAEjB,QAASiB,EAAUjB,QAAU,MAPxC,EAAKgB,UAAS,SAACC,GACb,MAAO,CAAElB,KAAMkB,EAAUlB,KAAO,O,EAkBtCmB,gCAAkC,WAIhC,IAHA,IAAMC,EAAcC,OAAOC,OAAO,EAAKR,OACnCX,EAAQ,EACRoB,EAAa,EACRC,EAAI,EAAGA,EAAIJ,EAAYK,OAAQD,IAAK,CAE3CrB,GADgBiB,EAAYI,GAE5BD,EAAc,EAAKT,MAAMd,MAAQG,EAAQ,EAAKW,MAAMb,SAAY,IAElE,OAAOsB,G,uDAGC,IAAD,EACwBG,KAAKZ,MAA5Bd,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQkB,OAAOC,OAAOI,KAAKZ,OAAOa,QACtC,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IACtB,GAEIN,EAAaG,KAAKP,kCAExB,OACE,6BACE,kBAACZ,EAAD,CAAiBC,gBAAiBkB,KAAKX,YACvC,kBAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBmB,S,GArDGO,aCFjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.bdc9fad0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.defaultProps = {\r\n  title: \"\",\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nexport default function Notification({ message }) {\r\n  return <div>{message}</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nimport Section from \"../Section/Section\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  const isShowNotification = total === 0;\r\n  const isShowStatistics = total > 0;\r\n\r\n  return (\r\n    <Section title=\"Statistics\">\r\n      {isShowNotification && <Notification message=\"No feedback given\" />}\r\n      {isShowStatistics && (\r\n        <div>\r\n          <p>Good: {good} </p>\r\n          <p>Neutral: {neutral}</p>\r\n          <p>Bad: {bad}</p>\r\n\r\n          <p>Total: {total}</p>\r\n          <p>Positive feedback: {positivePercentage}%</p>\r\n        </div>\r\n      )}\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\n\r\nimport Section from \"../Section/Section\";\r\n\r\nexport default function FeedbackOptions({ onLeaveFeedback }) {\r\n  return (\r\n    <Section title=\"Please leave feedback\">\r\n      <div>\r\n        <button type=\"button\" id=\"good\" onClick={onLeaveFeedback}>\r\n          Good\r\n        </button>\r\n        <button type=\"button\" id=\"neutral\" onClick={onLeaveFeedback}>\r\n          Neutral\r\n        </button>\r\n        <button type=\"button\" id=\"bad\" onClick={onLeaveFeedback}>\r\n          Bad\r\n        </button>\r\n      </div>\r\n    </Section>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\n\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\n\nconst INITIAL_FEEDBACK = { good: 0, neutral: 0, bad: 0 };\n\nexport default class App extends Component {\n  state = INITIAL_FEEDBACK;\n\n  addReview = ({ target }) => {\n    const { id } = target;\n    if (id === \"good\") {\n      this.setState((prevState) => {\n        return { good: prevState.good + 1 };\n      });\n      return;\n    }\n    if (id === \"neutral\") {\n      this.setState((prevState) => {\n        return { neutral: prevState.neutral + 1 };\n      });\n      return;\n    }\n    if (id === \"bad\") {\n      this.setState((prevState) => {\n        return { bad: prevState.bad + 1 };\n      });\n      return;\n    }\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const arrFeedback = Object.values(this.state);\n    let total = 0;\n    let persentage = 0;\n    for (let i = 0; i < arrFeedback.length; i++) {\n      const element = arrFeedback[i];\n      total += element;\n      persentage = (this.state.good / (total - this.state.neutral)) * 100;\n    }\n    return persentage;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = Object.values(this.state).reduce(\n      (acc, value) => acc + value,\n      0\n    );\n    const persentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div>\n        <FeedbackOptions onLeaveFeedback={this.addReview} />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={persentage}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}